version: "3.8"

services:
  shopping-postgresql:
    container_name: shopping-postgres
    image: felipewind/shopping-postgres:13.3
    build:
      context: ./postgresql/
      dockerfile: ./Dockerfile
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
    ports:
        - 5432:5432
    networks:
      - shopping-net

  shopping-quarkus:
    container_name: shopping-quarkus
    image: felipewind/shopping-quarkus:1.0
    build:
      context: ./quarkus/
      dockerfile: ./src/main/docker/Dockerfile.jvm
    ports:
      - 8080:8080
    networks:
      - shopping-net
    depends_on:
      - shopping-postgresql
    environment:
      - DB_ECHO_VALUES=true      
      - PORT=8080
        ### Using the DB_HEROKU_SPLIT = true  ###
      - DB_HEROKU_SPLIT=true
      - DATABASE_URL=postgres://postgres:postgres@shopping-postgresql:5432/postgres?currentSchema=shop
        ### Using the DB_HEROKU_SPLIT = false ###
      # - DB_HEROKU_SPLIT=false
      # - DB_JDBC_URL=jdbc:postgresql://shopping-postgresql:5432/postgres?currentSchema=shop
      # - DB_JDBC_USER=postgres
      # - DB_JDBC_PASSWORD=postgres      
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://shopping-postgresql:5432/postgres?currentSchema=shop
      - QUARKUS_DATASOURCE_USERNAME=postgres
      - QUARKUS_DATASOURCE_PASSWORD=postgres
    
  shopping-angular:
    container_name: shopping-angular
    image: felipewind/shopping-angular:1.0
    build:
      context: ./angular/
      dockerfile: ./Dockerfile
    ports:
      - 80:80
    networks:
      - shopping-net
    depends_on:      
      - shopping-quarkus
    environment:      
      - API_URL=http://localhost:8080
      - PORT=80

networks:
  shopping-net:
    driver: bridge
